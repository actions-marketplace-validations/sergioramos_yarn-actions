{
  "name": "yarn",
  "inputs": {
    "version": {
      "description": "output the version number",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "no-default-rc": {
      "description": "prevent Yarn from automatically detecting yarnrc and npmrc files",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "use-yarnrc": {
      "description": "specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc)",
      "required": false
    },
    "verbose": {
      "description": "output verbose messages on internal operations",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "offline": {
      "description": "trigger an error if any required dependencies are not available in local cache",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "prefer-offline": {
      "description": "use network only if dependencies are not available in local cache",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "enable-pnp": {
      "description": "enable the Plug'n'Play installation",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "disable-pnp": {
      "description": "disable the Plug'n'Play installation",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "strict-semver": {
      "required": false,
      "dflt": false,
      "flag": true
    },
    "json": {
      "descriptions": "format Yarn log messages as lines of JSON (see jsonlines.org)",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "ignore-scripts": {
      "descriptions": "don't run lifecycle scripts",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "har": {
      "descriptions": "save HAR output of network traffic",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "ignore-platform": {
      "descriptions": "ignore platform checks",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "ignore-engines": {
      "descriptions": "ignore engines check",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "ignore-optional": {
      "descriptions": "ignore optional dependencies",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "force": {
      "descriptions": "install and build packages even if they were built before, overwrite lockfile",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "skip-integrity-check": {
      "descriptions": "run install without checking if node_modules is installed",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "check-files": {
      "descriptions": "install will verify file tree of packages for consistency",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "no-bin-links": {
      "descriptions": "don't generate bin links when setting up packages",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "flat": {
      "descriptions": "only allow one version of a package",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "production": {
      "required": false,
      "dflt": false,
      "flag": true
    },
    "no-lockfile": {
      "description": "don't read or generate a lockfile",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "non-interactive": {
      "description": "do not show interactive prompts",
      "required": false,
      "dflt": true,
      "flag": true
    },
    "pure-lockfile": {
      "description": "don't generate a lockfile",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "frozen-lockfile": {
      "description": "don't generate a lockfile and fail if an update is needed",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "update-checksums": {
      "description": "update package checksums from current repository",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "link-duplicates": {
      "description": "create hardlinks to the repeated modules in node_modules",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "link-folder": {
      "description": "specify a custom folder to store global links",
      "required": false
    },
    "global-folder": {
      "description": "specify a custom folder to store global packages",
      "required": false
    },
    "modules-folder": {
      "description": "rather than installing modules into the node_modules folder relative to the cwd, output them here",
      "required": false
    },
    "preferred-cache-folder": {
      "description": "specify a custom folder to store the yarn cache if possible",
      "required": false
    },
    "cache-folder": {
      "description": "specify a custom folder that must be used to store the yarn cache",
      "required": false
    },
    "mutex": {
      "description": "use a mutex to ensure only one yarn instance is executing",
      "required": false
    },
    "no-emoji": {
      "description": "disabled emoji in output",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "silent": {
      "description": "skip Yarn console logs, other types of logs (script output) will be printed",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "cwd": {
      "description": "working directory to use",
      "required": false
    },
    "proxy": {
      "required": false
    },
    "https-proxy": {
      "required": false
    },
    "registry": {
      "description": "override configuration registry",
      "required": false
    },
    "no-progress": {
      "description": "disable progress bar",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "network-concurrency": {
      "description": "maximum number of concurrent network requests",
      "required": false
    },
    "network-timeout": {
      "description": "TCP timeout for network requests",
      "required": false
    },
    "no-scripts-prepend-node-path": {
      "description": "don't prepend the node executable dir to the PATH in scripts"
    },
    "no-node-version-check": {
      "description": "do not warn when using a potentially unsupported Node version",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "focus": {
      "description": "Focus on a single workspace by installing remote copies of its sibling workspaces",
      "required": false,
      "dflt": false,
      "flag": true
    },
    "otp": {
      "description": "one-time password for two factor authentication",
      "required": false
    },
    "help": {
      "description": "output usage information",
      "required": false,
      "dflt": false,
      "flag": true
    }
  },
  "commands": {
    "add": {
      "description": "Installs a package and any packages that it depends on",
      "inputs": {
        "ignore-workspace-root-check": {
          "description": "required to run yarn add inside a workspace root",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "dev": {
          "description": "save package to your `devDependencies`",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "peer": {
          "description": "save package to your `peerDependencies`",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "optional": {
          "description": "save package to your `optionalDependencies`",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "exact": {
          "description": "install exact version",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "tilde": {
          "description": "install most recent release with the same minor version",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "audit": {
          "description": "Run vulnerability audit on installed packages",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "packages": {
          "required": true,
          "description": "Comma separated list of packages to install",
          "anonymous": true,
          "split": true
        }
      }
    },
    "audit": {
      "description": "Checks for known security issues with the installed packages",
      "inputs": {
        "summary": {
          "description": "Only print the summary",
          "required": false,
          "dflt": true
        },
        "groups": {
          "description": "Only audit dependencies from listed groups. Default: devDependencies, dependencies, optionalDependencies (default: devDependencies,dependencies,optionalDependencies)",
          "required": false
        },
        "level": {
          "description": "Only print advisories with severity greater than or equal to one of the following: info|low|moderate|high|critical",
          "required": false,
          "dflt": "info"
        }
      }
    },
    "autoclean": {
      "description": "Cleans and removes unnecessary files from package dependencies",
      "inputs": {
        "init": {
          "description": "Create .yarnclean file with the default entries",
          "dflt": false,
          "flag": true,
          "required": false
        },
        "force": {
          "description": "Run autoclean using the existing .yarnclean file",
          "dflt": false,
          "flag": true,
          "required": false
        }
      }
    },
    "bin": {
      "description": "Displays the location of the yarn bin folder"
    },
    "cache": {
      "description": "Yarn cache list will print out every cached package"
    },
    "check": {
      "description": "Yarn cache list will print out every cached package",
      "inputs": {
        "integrity": {
          "required": false,
          "dflt": false,
          "flag": true
        },
        "verify-tree": {
          "required": false,
          "dflt": false,
          "flag": true
        }
      }
    },
    "config": {
      "description": "Manages the yarn configuration files",
      "commands": {
        "set": {
          "inputs": {
            "key": {
              "required": true,
              "anonymous": true
            },
            "value": {
              "required": true,
              "anonymous": true
            }
          }
        },
        "get": {
          "inputs": {
            "input": {
              "required": true,
              "anonymous": true
            }
          }
        },
        "delete": {
          "inputs": {
            "input": {
              "required": true,
              "anonymous": true
            }
          }
        },
        "list": {},
        "current": {}
      }
    },
    "create": {
      "description": "Creates new projects from any create-* starter kits",
      "inputs": {
        "starter-kit": {
          "required": true,
          "anonymous": true
        }
      }
    },
    "exec": {
      "inputs": {
        "cmd": {
          "required": true,
          "anonymous": true
        }
      }
    },
    "generate-lock-entry": {
      "description": "Generates a lock file entry",
      "inputs": {
        "use-manifest": {
          "required": false
        },
        "resolved": {
          "required": false
        },
        "registry": {
          "required": false
        }
      }
    },
    "global": {
      "description": "Installs packages globally on your operating system",
      "inputs": {
        "prefix": {
          "description": "bin prefix to use to install binaries",
          "required": false
        },
        "latest": {
          "description": "upgrade to the latest version of packages",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "command": {
          "description": "add|bin|dir|ls|list|remove|upgrade|upgrade-interactive",
          "anonymous": true,
          "required": true
        }
      }
    },
    "import": {
      "description": "Generates yarn.lock from an npm package-lock.json file or an existing npm-installed node_modules folder"
    },
    "info": {
      "description": "Shows information about a package",
      "inputs": {
        "pkg": {
          "anonymous": true,
          "required": true
        }
      }
    },
    "init": {
      "description": "Interactively creates or updates a package.json file",
      "inputs": {
        "yes": {
          "description": "use default options",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "private": {
          "description": "use default options and private true",
          "required": false,
          "dflt": false,
          "flag": true
        }
      }
    },
    "install": {
      "description": "Yarn install is used to install all dependencies for a project",
      "dflt": true,
      "inputs": {
        "audit": {
          "description": "Run vulnerability audit on installed packages",
          "required": false,
          "dflt": false,
          "flag": true
        }
      }
    },
    "licenses": {
      "description": "Lists licenses for installed packages"
    },
    "link": {
      "description": "Symlink a package folder during development"
    },
    "list": {
      "description": "Lists installed packages",
      "inputs": {
        "depth": {
          "description": "Limit the depth of the shown dependencies",
          "required": false
        },
        "pattern": {
          "description": "Filter dependencies by pattern",
          "required": false
        }
      }
    },
    "node": {
      "description": "Runs Node with the same version that the one used by Yarn itself, and by default from the project root",
      "inputs": {
        "into": {
          "description": "Sets the cwd to the specified location",
          "required": false
        }
      }
    },
    "outdated": {
      "description": "Checks for outdated package dependencies"
    },
    "owner": {
      "description": "Manages package owners",
      "commands": {
        "add": {
          "inputs": {
            "user": {
              "required": true
            },
            "pkg": {
              "required": false,
              "anonymous": true
            }
          }
        },
        "remove": {
          "inputs": {
            "user": {
              "required": true
            },
            "pkg": {
              "required": false,
              "anonymous": true
            }
          }
        },
        "list": {
          "inputs": {
            "user": {
              "required": true
            },
            "pkg": {
              "required": false,
              "anonymous": true
            }
          }
        }
      }
    },
    "pack": {
      "description": "Creates a compressed gzip archive of package dependencies",
      "inputs": {
        "filename": {
          "required": true
        }
      }
    },
    "policies": {
      "commands": {
        "set-version": {}
      }
    },
    "publish": {
      "description": "Publishes a package to the npm registry",
      "inputs": {
        "tarball": {
          "required": false,
          "anonymous": true
        },
        "folder": {
          "required": false,
          "anonymous": true
        },
        "new-version": {
          "description": "new version",
          "required": false
        },
        "major": {
          "description": "auto-increment major version number",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "minor": {
          "description": "auto-increment minor version number",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "patch": {
          "description": "auto-increment patch version number",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "premajor": {
          "description": "auto-increment premajor version number",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "preminor": {
          "description": "auto-increment preminor version number",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "prepatch": {
          "description": "auto-increment prepatch version number",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "prerelease": {
          "description": "auto-increment prerelease version number",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "preid": {
          "description": "add a custom identifier to the prerelease",
          "required": false
        },
        "message": {
          "required": false
        },
        "no-git-tag-version": {
          "description": "no git tag version",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "no-commit-hooks": {
          "description": "bypass git hooks when committing new version",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "access": {
          "required": false,
          "flag": true
        },
        "tag": {
          "required": false
        }
      }
    },
    "remove": {
      "description": "Removes a package from your direct dependencies updating your package.json and yarn.lock",
      "inputs": {
        "pkg": {
          "required": false,
          "anonymous": true
        },
        "ignore-workspace-root-check": {
          "description": "required to run yarn remove inside a workspace root",
          "required": false,
          "dflt": false,
          "flag": true
        }
      }
    },
    "run": {
      "description": "Runs a defined package script",
      "inputs": {
        "script": {
          "required": false,
          "anonymous": true
        }
      }
    },
    "tag": {
      "description": "Add, remove, or list tags on a package",
      "commands": {
        "add": {
          "inputs": {
            "pkg": {
              "required": true,
              "anonymous": true
            },
            "tag": {
              "required": false,
              "anonymous": true
            }
          }
        },
        "remove": {
          "inputs": {
            "pkg": {
              "required": true,
              "anonymous": true
            },
            "tag": {
              "required": true,
              "anonymous": true
            }
          }
        },
        "list": {
          "inputs": {
            "pkg": {
              "required": false,
              "anonymous": true
            }
          }
        }
      }
    },
    "team": {
      "description": "Maintain team memberships",
      "commands": {
        "create": {
          "inputs": {
            "name": {
              "required": true,
              "anonymous": true
            }
          }
        },
        "destroy": {
          "inputs": {
            "name": {
              "required": true,
              "anonymous": true
            }
          }
        },
        "add": {
          "inputs": {
            "name": {
              "required": true,
              "anonymous": true
            },
            "user": {
              "required": true,
              "anonymous": true
            }
          }
        },
        "remove": {
          "inputs": {
            "name": {
              "required": true,
              "anonymous": true
            },
            "user": {
              "required": true,
              "anonymous": true
            }
          }
        },
        "list": {
          "inputs": {
            "name": {
              "required": true,
              "anonymous": true
            }
          }
        }
      }
    },
    "unlink": {
      "description": "Unlink a previously created symlink for a package",
      "inputs": {
        "pkg": {
          "required": false,
          "anonymous": true
        }
      }
    },
    "unplug": {
      "description": "Temporarily copies a package (with an optional @range suffix) outside of the global cache for debugging purposes",
      "inputs": {
        "pkg": {
          "required": false,
          "anonymous": true
        }
      }
    },
    "upgrade": {
      "description": "Upgrades packages to their latest version based on the specified range",
      "inputs": {
        "scope": {
          "description": "upgrade packages under the specified scope",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "latest": {
          "description": "list the latest version of packages, ignoring version ranges in package.json",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "exact": {
          "description": "install exact version. Only used when --latest is specified.",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "pattern": {
          "description": "upgrade packages that match pattern",
          "required": false
        },
        "tilde": {
          "description": "install most recent release with the same minor version. Only used when --latest is specified.",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "caret": {
          "description": "install most recent release with the same major version. Only used when --latest is specified.",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "audit": {
          "description": "run vulnerability audit on installed packages",
          "required": false,
          "dflt": false,
          "flag": true
        }
      }
    },
    "version": {
      "description": "Update the version of your package via the command line",
      "inputs": {
        "major": {
          "description": "auto-increment major version number",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "minor": {
          "description": "auto-increment minor version number",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "patch": {
          "description": "auto-increment patch version number",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "premajor": {
          "description": "auto-increment premajor version number",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "preminor": {
          "description": "auto-increment preminor version number",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "prepatch": {
          "description": "auto-increment prepatch version number",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "prerelease": {
          "description": "auto-increment prerelease version number",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "preid": {
          "description": "add a custom identifier to the prerelease",
          "required": false
        },
        "message": {
          "required": false
        },
        "no-git-tag-version": {
          "description": "no git tag version",
          "required": false,
          "dflt": false,
          "flag": true
        },
        "no-commit-hooks": {
          "description": "bypass git hooks when committing new version",
          "required": false,
          "dflt": false,
          "flag": true
        }
      }
    },
    "versions": {
      "description": "Displays version information of currently installed Yarn, Node.js, and its dependencies"
    },
    "why": {
      "description": "Identifies why a package has been installed, detailing which other packages depend on it",
      "inputs": {
        "pkg": {
          "required": false,
          "anonymous": true
        }
      }
    },
    "workspace": {
      "recursive": {
        "ignore": ["workspace", "workspaces"]
      }
    },
    "workspaces": {
      "recursive": {
        "ignore": ["workspace", "workspaces"]
      }
    }
  }
}
